/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.ftp4j;

import it.sauronsoftware.ftp4j.FTPClient;
import it.sauronsoftware.ftp4j.FTPException;
import it.sauronsoftware.ftp4j.FTPIllegalReplyException;

import java.io.IOException;
import java.io.OutputStream;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiBlob;
import org.appcelerator.titanium.io.TiFile;

@Kroll.proxy(creatableInModule = Ftp4jModule.class)
public class UploadProxy extends KrollProxy {
	private static final String LCAT = "FTP4j";

	public FTPClient client;
	public KrollDict opts;

	public UploadProxy() {
		super();
	}

	@Override
	public void handleCreationDict(KrollDict opts) {
		super.handleCreationDict(opts);
		this.opts = opts;
		new TiFTPclient(this);
	}

	@Kroll.method
	public void disconnect() {
		if (client != null && client.isConnected()) {
			Thread t = new Thread() {
				public void run() {
					try {
						client.disconnect(true);
					} catch (IllegalStateException | IOException
							| FTPIllegalReplyException | FTPException e) {
						e.printStackTrace();
					}
				}
			};
			t.start();
		}
	}

	@Kroll.method
	public boolean isConnected() {
		return client.isConnected();
	}

}